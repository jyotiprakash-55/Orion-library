@using PagedList;
@using PagedList.Mvc;
@using Orion_library.Models
@model PagedList.IPagedList<LibraryRecord>
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_LayoutdisplayForDashboard.cshtml";
  

}
<h3 class="text-bg-success float-end m-3">Welcome @Session["UserName"]</h3>
<h3 class="text-bg-success float-end m-3">Total Records: @ViewBag.totatlist</h3>
<div class="mt-3">
    @using (Html.BeginForm("Dashboard", "DashboardDisplay", FormMethod.Get))
    {
        <table class="offset-1">
            <tr>
                <td>
                    @Html.TextBox("searching", null, new { Class = "form-control ", id = "Search" , placeholder = "Enter your search" })
                </td>
                <td>&nbsp;&nbsp;</td>
                <td>
                    <input type="submit" value="Search" class="btn btn-primary " />
                </td>
            </tr>
            @if (Model.Count() == 0)
            {
                <tr>
                    <td class="text-danger">No rows match</td>
                </tr>
            }

        </table>
    }

</div>
<div class="container mt-3">
    <table class="table-bordered text-center mx-2 ">
        <thead class="text-bg-success ">
            <tr>
                <th class="px-3 py-2">
                    ID
                </th>
                <th>
                    @Html.ActionLink("Title", "Dashboard", new { SortBy = "Title" })
                </th>
                <th>
                    @Html.ActionLink("Author1", "Dashboard", new { SortBy = "Author1" })
                </th>
                <th>
                    @Html.ActionLink("Author2", "Dashboard", new { SortBy = "Author2" })
                </th>
                <th class="px-1 py-2">
                    Published Date
                </th>
                <th>
                    Pages
                </th>
                <th>
                    @Html.ActionLink("Description", "Dashboard", new { SortBy = "Description" })
                </th>
                <th>
                    @Html.ActionLink("Language", "Dashboard", new { SortBy = "Language" })
                </th>
                <th>
                    Shelf Number
                </th>
                <th>
                    @Html.ActionLink("Topics", "Dashboard", new { SortBy = "Topics" })
                </th>
                <th class="px-1 py-2">
                    Purchase Date
                </th>
                <th class="px-1 py-2">
                    Issued Date
                </th>
                <th class="px-1 py-2">
                    Created On
                </th>
                <th class="px-1 py-2">
                    Created By
                </th>
                <th class="px-1 py-2">
                    Updated By
                </th>
                <th class="p-2">
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="Search">
                    <td class="px-3">@item.ID</td>
                    <td>@item.Title</td>
                    <td>@item.Author1</td>
                    <td>@item.Author2</td>
                    <td>@item.PublishedDate</td>
                    <td>@item.Pages</td>
                    <td>@item.Description</td>
                    <td>@item.Language</td>
                    <td>@item.ShelfNumber</td>
                    <td>@item.Topics</td>
                    <td>@item.PurchaseDate</td>
                    <td>@item.IssuedDate</td>
                    <td>@item.CreatedOnDateTime</td>
                    <td>@item.CreatedByUserId</td>
                    <td>@item.UpdateByUserId</td>
                    <td>

                        <div class="btn-group">
                            <a href="@Url.Action("Edit", "DashboardDisplay", new { EditBy = @item.ID })" class="btn btn-warning">Edit</a>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#ForDelete-@item.ID">
                                Delete
                            </button>
                            <div class="modal fade" id="ForDelete-@item.ID" tabindex="-1" aria-labelledby="DeleteConfirmLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to delete?
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            <a href="@Url.Action("Delete", "DashboardDisplay", new { DeleteBy = @item.ID })" class="btn btn-danger">Delete</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="container">
    Page (@(Model.PageCount <Model.PageNumber ? 0: Model.PageNumber)/@Model.PageCount)
    @Html.PagedListPager(Model, page => Url.Action("Dashboard", "DashboardDisplay", new { page = page, searching = Request.QueryString["searching"], SortBy = Request.QueryString["SortBy"], searchtext = Request.QueryString["searchtext"] }))
</div>

<script src="~/Scripts/jquery-3.6.3.js"></script>
<script>
    $(document).ready(function () {
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchtext = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchtext)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        });
    });
    
</script>




